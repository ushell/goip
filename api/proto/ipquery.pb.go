// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: api/proto/ipquery.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询IP请求
type QueryIPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"` // IP地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryIPRequest) Reset() {
	*x = QueryIPRequest{}
	mi := &file_api_proto_ipquery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIPRequest) ProtoMessage() {}

func (x *QueryIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIPRequest.ProtoReflect.Descriptor instead.
func (*QueryIPRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{0}
}

func (x *QueryIPRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// 查询IP响应
type QueryIPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *IPInfo                `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`            // IP信息
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 查询时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryIPResponse) Reset() {
	*x = QueryIPResponse{}
	mi := &file_api_proto_ipquery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIPResponse) ProtoMessage() {}

func (x *QueryIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIPResponse.ProtoReflect.Descriptor instead.
func (*QueryIPResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{1}
}

func (x *QueryIPResponse) GetInfo() *IPInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *QueryIPResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 批量查询IP请求
type BatchQueryIPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ips           []string               `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"` // IP地址列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchQueryIPRequest) Reset() {
	*x = BatchQueryIPRequest{}
	mi := &file_api_proto_ipquery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchQueryIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryIPRequest) ProtoMessage() {}

func (x *BatchQueryIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryIPRequest.ProtoReflect.Descriptor instead.
func (*BatchQueryIPRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{2}
}

func (x *BatchQueryIPRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// 批量查询IP响应
type BatchQueryIPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*IPInfo              `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`          // IP信息列表
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 查询时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchQueryIPResponse) Reset() {
	*x = BatchQueryIPResponse{}
	mi := &file_api_proto_ipquery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchQueryIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryIPResponse) ProtoMessage() {}

func (x *BatchQueryIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryIPResponse.ProtoReflect.Descriptor instead.
func (*BatchQueryIPResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{3}
}

func (x *BatchQueryIPResponse) GetInfos() []*IPInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *BatchQueryIPResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 获取服务状态请求
type GetServiceStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceStatusRequest) Reset() {
	*x = GetServiceStatusRequest{}
	mi := &file_api_proto_ipquery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatusRequest) ProtoMessage() {}

func (x *GetServiceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetServiceStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{4}
}

// 获取服务状态响应
type GetServiceStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                            // 服务状态
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`                          // 服务版本
	Uptime        int64                  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`                           // 运行时间(秒)
	QueryCount    int64                  `protobuf:"varint,4,opt,name=query_count,json=queryCount,proto3" json:"query_count,omitempty"` // 查询次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceStatusResponse) Reset() {
	*x = GetServiceStatusResponse{}
	mi := &file_api_proto_ipquery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceStatusResponse) ProtoMessage() {}

func (x *GetServiceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetServiceStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{5}
}

func (x *GetServiceStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetServiceStatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetServiceStatusResponse) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GetServiceStatusResponse) GetQueryCount() int64 {
	if x != nil {
		return x.QueryCount
	}
	return 0
}

// IP信息
type IPInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`                                          // IP地址
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`                                // 国家
	CountryCode   string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`     // 国家代码
	Region        string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                                  // 省份/州
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`                                      // 城市
	District      string                 `protobuf:"bytes,6,opt,name=district,proto3" json:"district,omitempty"`                              // 区县
	Isp           string                 `protobuf:"bytes,7,opt,name=isp,proto3" json:"isp,omitempty"`                                        // ISP
	Latitude      float32                `protobuf:"fixed32,8,opt,name=latitude,proto3" json:"latitude,omitempty"`                            // 纬度
	Longitude     float32                `protobuf:"fixed32,9,opt,name=longitude,proto3" json:"longitude,omitempty"`                          // 经度
	Timezone      string                 `protobuf:"bytes,10,opt,name=timezone,proto3" json:"timezone,omitempty"`                             // 时区
	PostalCode    string                 `protobuf:"bytes,11,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`       // 邮政编码
	IsValid       bool                   `protobuf:"varint,12,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`               // 是否有效IP
	ErrorMessage  string                 `protobuf:"bytes,13,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPInfo) Reset() {
	*x = IPInfo{}
	mi := &file_api_proto_ipquery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPInfo) ProtoMessage() {}

func (x *IPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipquery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPInfo.ProtoReflect.Descriptor instead.
func (*IPInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_ipquery_proto_rawDescGZIP(), []int{6}
}

func (x *IPInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IPInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IPInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *IPInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *IPInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IPInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *IPInfo) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *IPInfo) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *IPInfo) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *IPInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *IPInfo) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *IPInfo) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *IPInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_api_proto_ipquery_proto protoreflect.FileDescriptor

const file_api_proto_ipquery_proto_rawDesc = "" +
	"\n" +
	"\x17api/proto/ipquery.proto\x12\aipquery\" \n" +
	"\x0eQueryIPRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"T\n" +
	"\x0fQueryIPResponse\x12#\n" +
	"\x04info\x18\x01 \x01(\v2\x0f.ipquery.IPInfoR\x04info\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"'\n" +
	"\x13BatchQueryIPRequest\x12\x10\n" +
	"\x03ips\x18\x01 \x03(\tR\x03ips\"[\n" +
	"\x14BatchQueryIPResponse\x12%\n" +
	"\x05infos\x18\x01 \x03(\v2\x0f.ipquery.IPInfoR\x05infos\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"\x19\n" +
	"\x17GetServiceStatusRequest\"\x85\x01\n" +
	"\x18GetServiceStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x03 \x01(\x03R\x06uptime\x12\x1f\n" +
	"\vquery_count\x18\x04 \x01(\x03R\n" +
	"queryCount\"\xe6\x02\n" +
	"\x06IPInfo\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x1a\n" +
	"\bdistrict\x18\x06 \x01(\tR\bdistrict\x12\x10\n" +
	"\x03isp\x18\a \x01(\tR\x03isp\x12\x1a\n" +
	"\blatitude\x18\b \x01(\x02R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\t \x01(\x02R\tlongitude\x12\x1a\n" +
	"\btimezone\x18\n" +
	" \x01(\tR\btimezone\x12\x1f\n" +
	"\vpostal_code\x18\v \x01(\tR\n" +
	"postalCode\x12\x19\n" +
	"\bis_valid\x18\f \x01(\bR\aisValid\x12#\n" +
	"\rerror_message\x18\r \x01(\tR\ferrorMessage2\xf4\x01\n" +
	"\x0eIPQueryService\x12<\n" +
	"\aQueryIP\x12\x17.ipquery.QueryIPRequest\x1a\x18.ipquery.QueryIPResponse\x12K\n" +
	"\fBatchQueryIP\x12\x1c.ipquery.BatchQueryIPRequest\x1a\x1d.ipquery.BatchQueryIPResponse\x12W\n" +
	"\x10GetServiceStatus\x12 .ipquery.GetServiceStatusRequest\x1a!.ipquery.GetServiceStatusResponseB\rZ\v./api/protob\x06proto3"

var (
	file_api_proto_ipquery_proto_rawDescOnce sync.Once
	file_api_proto_ipquery_proto_rawDescData []byte
)

func file_api_proto_ipquery_proto_rawDescGZIP() []byte {
	file_api_proto_ipquery_proto_rawDescOnce.Do(func() {
		file_api_proto_ipquery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_ipquery_proto_rawDesc), len(file_api_proto_ipquery_proto_rawDesc)))
	})
	return file_api_proto_ipquery_proto_rawDescData
}

var file_api_proto_ipquery_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_ipquery_proto_goTypes = []any{
	(*QueryIPRequest)(nil),           // 0: ipquery.QueryIPRequest
	(*QueryIPResponse)(nil),          // 1: ipquery.QueryIPResponse
	(*BatchQueryIPRequest)(nil),      // 2: ipquery.BatchQueryIPRequest
	(*BatchQueryIPResponse)(nil),     // 3: ipquery.BatchQueryIPResponse
	(*GetServiceStatusRequest)(nil),  // 4: ipquery.GetServiceStatusRequest
	(*GetServiceStatusResponse)(nil), // 5: ipquery.GetServiceStatusResponse
	(*IPInfo)(nil),                   // 6: ipquery.IPInfo
}
var file_api_proto_ipquery_proto_depIdxs = []int32{
	6, // 0: ipquery.QueryIPResponse.info:type_name -> ipquery.IPInfo
	6, // 1: ipquery.BatchQueryIPResponse.infos:type_name -> ipquery.IPInfo
	0, // 2: ipquery.IPQueryService.QueryIP:input_type -> ipquery.QueryIPRequest
	2, // 3: ipquery.IPQueryService.BatchQueryIP:input_type -> ipquery.BatchQueryIPRequest
	4, // 4: ipquery.IPQueryService.GetServiceStatus:input_type -> ipquery.GetServiceStatusRequest
	1, // 5: ipquery.IPQueryService.QueryIP:output_type -> ipquery.QueryIPResponse
	3, // 6: ipquery.IPQueryService.BatchQueryIP:output_type -> ipquery.BatchQueryIPResponse
	5, // 7: ipquery.IPQueryService.GetServiceStatus:output_type -> ipquery.GetServiceStatusResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_ipquery_proto_init() }
func file_api_proto_ipquery_proto_init() {
	if File_api_proto_ipquery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_ipquery_proto_rawDesc), len(file_api_proto_ipquery_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_ipquery_proto_goTypes,
		DependencyIndexes: file_api_proto_ipquery_proto_depIdxs,
		MessageInfos:      file_api_proto_ipquery_proto_msgTypes,
	}.Build()
	File_api_proto_ipquery_proto = out.File
	file_api_proto_ipquery_proto_goTypes = nil
	file_api_proto_ipquery_proto_depIdxs = nil
}
